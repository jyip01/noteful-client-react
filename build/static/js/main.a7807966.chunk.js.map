{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","NotefulForm","assign","action","AddFolder","handleSubmit","target","value","body","JSON","stringify","NotefulForm_NotefulForm","onSubmit","htmlFor","AddNote","newNote","Date","App","state","handleAddFolder","setState","toConsumableArray","handleAddNote","_this2","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a7807966.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: 'https://young-meadow-57359.herokuapp.com/api'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddFolder.css'\n\nexport default class AddFolder extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      name: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n      \n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name' />\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      name: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folderId: e.target['note-folder-id'].value,\n      modified: new Date(),\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folderId}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders=[] } = this.context\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='note-name' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='note-content' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='note-folder-id'>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageMain}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          component={AddNote}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}